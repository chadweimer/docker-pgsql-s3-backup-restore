name: Continuous Integration
on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  release:
    types: [published]
jobs:
  build:
    name: Build
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: docker/setup-buildx-action@v1
      - uses: docker/setup-qemu-action@v1
        with:
          platforms: arm,arm64
      - uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - run: |
          docker buildx build --push --platform linux/amd64,linux/arm,linux/arm64 -t cwmr/pgsql-s3-backup:latest -f pgsql-s3-backup/Dockerfile pgsql-s3-backup
          docker buildx build --push --platform linux/amd64,linux/arm,linux/arm64 -t cwmr/pgsql-s3-restore:latest -f pgsql-s3-restore/Dockerfile pgsql-s3-restore
        if: startswith(github.ref, 'refs/heads/master')
      - run: |
          docker buildx build --push --platform linux/amd64,linux/arm,linux/arm64 -t cwmr/pgsql-s3-backup:dev -f pgsql-s3-backup/Dockerfile pgsql-s3-backup
          docker buildx build --push --platform linux/amd64,linux/arm,linux/arm64 -t cwmr/pgsql-s3-restore:dev -f pgsql-s3-restore/Dockerfile pgsql-s3-restore
        if: startswith(github.ref, 'refs/pull/')
      - run: |
          TAG="$(echo $GITHUB_REF | sed -e 's/^refs\/tags\///')"
          docker buildx build --push --platform linux/amd64,linux/arm,linux/arm64 -t cwmr/pgsql-s3-backup:$(TAG) -f pgsql-s3-backup/Dockerfile pgsql-s3-backup
          docker buildx build --push --platform linux/amd64,linux/arm,linux/arm64 -t cwmr/pgsql-s3-restore:$(TAG) -f pgsql-s3-restore/Dockerfile pgsql-s3-restore
        if: startswith(github.ref, 'refs/tags/')
